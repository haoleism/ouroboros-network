module Ouroboros.Network.MuxWithDeltaQ
  (
  ) where


-- | Desired servicing semantics
--   ===========================
--
--   Constructing fairness
--   ---------------------
--   In this context we are defining fairness as:
--    - no starvation
--    - when presented with equal demand (from a selection of mini
--      protocols) deliver "equal" service. 
--     
--   Equality here might be in terms of equal service rate of
--   requests (or segmented requests) and/or in terms of effecitive
--   (SDU) data rates.
--   
--
--  Notes: 
-- 
--   1) It is assumed that (for a given peer) that bulk delivery of
--      blocks (i.e. in recovery mode) and normal, interactive,
--      operation (e.g. chain following) are mutually exclusive. As
--      such there is no requirement to create a notion of
--      prioritisation between such traffic.
--
--   2) We are assuming that the underlying TCP/IP bearer is managed
--      so that indivual Mux-layer PDUs are paced. a) this is necessary
--      to mitigate head-of-line blocking effects (i.e. arbitrary
--      amounts of data accruing in the O/S kernel); b) ensuring that
--      any host egress data rate limits can be respected / enforced.
--       
--
--  Current Caveats
--
--  1) Not considering how mini-protocol associations are constructed
--     (depending on deployment model this might be resolved within
--     the instantiation of the peer relationship)
--
--  2) Not yet considered notion of orderly termination - this not
--     likely to be used in an operational context, but may be needed
--     for test harness use.
--
--  Principle of operation
--  ======================
--
--  Egress direction
--  ----------------
-- 
--  The request for service (the demand) from a mini protocol is
--  encapsulatedin a `Wanton`, such `Wanton`s are placed in a (finite)
--   queue (e.g TM
